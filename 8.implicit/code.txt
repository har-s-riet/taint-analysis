[PP,PP,PPNNN,PPNN]: https://chat.openai.com/share/a35053bc-a74e-43fc-a944-d3b7b703b9f6
https://chat.openai.com/share/53bd3031-2fa6-42c8-80a1-2f3327a5ad2f

// 1
package de.ecspride;

import android.app.Activity;
import android.content.Context;
import android.os.Bundle;
import android.telephony.TelephonyManager;
import android.util.Log;

public class Flow1 extends Activity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_implicit_flow1);
        TelephonyManager telephonyManager = (TelephonyManager)getSystemService(Context.TELEPHONY_SERVICE);
		String imei = telephonyManager.getDeviceId();  
		String obfuscatedIMEI = obfuscateIMEI(imei);
		writeToLog(obfuscatedIMEI);
		

		obfuscatedIMEI = copyIMEI(imei);
		writeToLog(obfuscatedIMEI); 
		
	}
	
	private String obfuscateIMEI(String imei){
		String result = "";
		
		for(char c : imei.toCharArray()){
			switch(c){
				case '0' : result += 'a'; break;
				case '1' : result += 'b'; break;
				case '2' : result += 'c'; break;
				case '3' : result += 'd'; break;
				case '4' : result += 'e'; break;
				case '5' : result += 'f'; break;
				case '6' : result += 'g'; break;
				case '7' : result += 'h'; break;
				case '8' : result += 'i'; break;
				case '9' : result += 'j'; break;
				default : System.err.println("Problem in obfuscateIMEI for character: " + c);
			}
		}
		return result;
	}
	
	private String copyIMEI(String imei){

		Integer[] numbers = new Integer[]{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,
				20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,
				40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57};
		
		char[] imeiAsChar = imei.toCharArray();
		
		char[] newOldIMEI = new char[imeiAsChar.length];
		
		for(int i = 0; i < imeiAsChar.length; i++){
			int tmp = numbers[(int)imeiAsChar[i]];
			newOldIMEI[i] = (char)tmp;
		}
		
		return new String (newOldIMEI);
	}
	
	private void writeToLog(String message){
		Log.i("INFO", message); 
	}
    
}

<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".ImplicitFlow1" >

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerHorizontal="true"
        android:layout_centerVertical="true"
        android:text="@string/hello_world" />

</RelativeLayout>
```
//2
package de.ecspride;

import android.app.Activity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.EditText;

public class Flow2 extends Activity {
	private boolean passwordCorrect = false;
	
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_implicit_flow2);
    }

    public void checkPassword(View view){
		EditText mEdit = (EditText)findViewById(R.id.password);
		String userInputPassword = mEdit.getText().toString(); 
		if(userInputPassword.equals("superSecure"))
			passwordCorrect = true;
		
		if(passwordCorrect)
			Log.i("INFO", "Password is correct"); 
		else
			Log.i("INFO", "Password is not correct");
	}
    
}

<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".ImplicitFlow2" >

    <EditText
        android:id="@+id/password"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentTop="true"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="98dp"
        android:ems="10"
        android:inputType="textPassword" >

        <requestFocus />
    </EditText>

    <Button
        android:id="@+id/button1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignLeft="@+id/password"
        android:layout_below="@+id/password"
        android:layout_marginTop="23dp"
        android:text="@string/check"
        android:onClick="checkPassword"
        />

</RelativeLayout>
```
//3
package de.ecspride;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

import android.app.Activity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.EditText;

public class Flow3 extends Activity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_implicit_flow3);
        ArrayList arrayList = new ArrayList();
		LinkedList linkedList = new LinkedList();
		

		leakInformationBit(linkedList);
		leakInformationBit(arrayList);
		leakInformationBit(linkedList);	
		
		Log.i("INFO", "before");
    }


  	public void leakData(View view){
  		Log.i("INFO", "before1");

  		EditText mEdit = (EditText)findViewById(R.id.password);
  		String userInputPassword = mEdit.getText().toString(); 
  		Log.i("INFO", "before2");
  		
  		Interface classTmp;
  		if(userInputPassword.equals("superSecure"))
  			classTmp = new ClassA();
  		else
  			classTmp = new ClassB();
  		
  		classTmp.leakInfo();
  	}

  	
  	private void leakInformationBit(List list){	
  		if(list instanceof ArrayList)
  			Log.i("INFO", "0"); 
  		else if(list instanceof LinkedList)
  			Log.i("INFO", "1"); 
  	}
  	
  	interface Interface{
  		public void leakInfo();
  	}
  	
  	public class ClassA implements Interface{
  		public void leakInfo(){
  			Log.i("INFO", "password correct"); 
  		}
  	}
  	
  	public class ClassB implements Interface{
  		public void leakInfo(){
  			Log.i("INFO", "password incorrect"); 
  		}
  	}

    
}

<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".ImplicitFlow3" >

    <TextView
        android:id="@+id/textView1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentTop="true"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="38dp"
        android:text="@string/leak1" />

    <EditText
        android:id="@+id/password"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/textView1"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="40dp"
        android:ems="10"
        android:inputType="textPassword" >

        <requestFocus />
    </EditText>

    <Button
        android:id="@+id/button1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignLeft="@+id/password"
        android:layout_below="@+id/password"
        android:layout_marginTop="27dp"
        android:text="@string/leak2"
        android:onClick="leakData"  />

</RelativeLayout>

```
//4
package de.ecspride;

import android.app.Activity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.EditText;

public class Flow4 extends Activity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_implicit_flow4);
    }

    public void checkUsernamePassword(View view){
		EditText editPassword = (EditText)findViewById(R.id.password); 
		EditText editUsername = (EditText)findViewById(R.id.username);
		String password = editPassword.getText().toString(); 
		String username = editUsername.getText().toString();
		
		Log.i("TAG", "bevor try"); 
		try{
			boolean passwordCorrect = lookup(username, password);
			if(passwordCorrect)
				Log.i("INFO", "password correct"); 
			else
				Log.i("INFO", "password not correct"); 
		}catch(Exception ex){
			Log.i("INFO", "username not available"); 
		}
		Log.i("TAG", "after try"); 
	}
	

	private boolean lookup(String username, String password) throws Exception{
		if(!username.equals("hanns"))
			throw new Exception("username not available");
		else if(username.equals("hanns") && !password.equals("superSecure"))
			return false;
		else 
			return true;
	}
    
}

<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".ImplicitFlow4" >

    <EditText
        android:id="@+id/username"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentTop="true"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="78dp"
        android:ems="10"
        android:inputType="textPersonName" >

        <requestFocus />
    </EditText>

    <EditText
        android:id="@+id/password"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/username"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="39dp"
        android:ems="10"
        android:inputType="textPassword" />

    <Button
        android:id="@+id/button1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignLeft="@+id/username"
        android:layout_centerVertical="true"
        android:text="@string/check"
        android:onClick="checkUsernamePassword" />

</RelativeLayout>
```